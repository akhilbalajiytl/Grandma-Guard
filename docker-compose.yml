# docker-compose.yml (Final, Robust, GPU-Enabled)

networks:
  llm_toolkit_net:
    driver: bridge

services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "5001:5000"
    volumes:
      - ./app:/app/app
      - ./wsgi.py:/app/wsgi.py
      # No need to mount run_cli.py for the webapp service
    environment:
      # This is now handled by the 'deploy' section
      - NVIDIA_VISIBLE_DEVICES=all
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db/${MYSQL_DATABASE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TARGET_API_ENDPOINT=${TARGET_API_ENDPOINT}
      - TARGET_LLM_API_KEY=${TARGET_LLM_API_KEY}
      - NIM_API_KEY=${NIM_API_KEY}
      - HF_TOKEN=${HF_TOKEN}
    depends_on:
      db:
        condition: service_healthy
      db-init: # <-- ADD THIS DEPENDENCY
        condition: service_completed_successfully
    #restart: always
    networks:
      - llm_toolkit_net

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    ports: ["3307:3306"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - mysql_data:/var/lib/mysql
    #restart: always
    networks:
      - llm_toolkit_net
    
  db-init:
    build:
      context: .
      dockerfile: Dockerfile
    # This service will run our new script and then exit
    command: ["python", "create_db.py"]
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db/${MYSQL_DATABASE}
    depends_on:
      db:
        # It waits for the DB to be healthy before running
        condition: service_healthy
    networks:
      - llm_toolkit_net
      
  redis:
    image: "redis:alpine"
    ports: ["6379:6379"]
    networks:
      - llm_toolkit_net

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    # The worker also needs access to the GPU if it runs ML tasks
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: dramatiq --threads 2 app.tasks
    volumes:
      - ./app:/app/app
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db/${MYSQL_DATABASE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NIM_API_KEY=${NIM_API_KEY}
      - HF_TOKEN=${HF_TOKEN}
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
      db-init: # <-- ADD THIS DEPENDENCY
        condition: service_completed_successfully
    #restart: unless-stopped # Use unless-stopped for workers
    networks:
      - llm_toolkit_net

volumes:
  mysql_data: